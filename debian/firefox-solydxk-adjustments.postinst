#!/bin/bash
# postinst script 
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

# Function to copy files to destination directory
function copy_files() {
    # Search for installed [browser]-bin file to get the installation directory
    BINPATHS=$(dpkg -S "$1-bin" 2>/dev/null | grep -E bin$ | awk '{print $2}')

    # There can be more instances installed of the same browser
    for BINPATH in $BINPATHS; do
        # Skip waterfox-classic
        if [[ $BINPATH == *classic* ]]; then
            continue
        fi

        INSTDIR=$(dirname $BINPATH)
        if [ -e "$INSTDIR" ]; then
            # Loop through all files in this package
            FLSDIR='/usr/share/solydxk/firefox'
            for F in $(find "$FLSDIR/" -type f -printf '%P\n'); do
                FDIR=$(dirname $F)

                # Create sub directory
                if [ ! -z "$INSTDIR/$FDIR" ]; then
                    mkdir -p "$INSTDIR/$FDIR"
                fi

                # Simply copy the file if not equal
                cmp -s "$FLSDIR/$F" "$INSTDIR/$F" || cp -vf "$FLSDIR/$F" "$INSTDIR/$F"
            done
        fi
    done
}

function remove_triggered() {
    if [ ! -e "$1" ]; then
        return
    fi

    BINPATH=$(find "$1" -name "*-bin")
    if [ -z "$BINPATH" ]; then
        rm -vf "$1/distribution/distribution.ini"
        rm -vf "$1/distribution/policies.json"
    fi
    FLS=$(find "$1" -type f)
    if [ -z "$FLS" ]; then
        rm -rf "$1"
    fi
}

case "$1" in    
    configure|upgrade|update|reconfigure)
        # Firefox browsers
        copy_files 'firefox'
        copy_files 'waterfox'
        copy_files 'librewolf'
    ;;
    triggered)
        # triggered can be used when:
        # 1. A new browser is installed
        # 2. A browser is updated
        copy_files 'firefox'
        copy_files 'waterfox'
        copy_files 'librewolf'
        # 3. A browser is removed
        remove_triggered '/usr/lib/firefox-esr'
        remove_triggered '/usr/lib/firefox'
        remove_triggered '/opt/waterfox'
        remove_triggered '/opt/waterfox-classic'
        remove_triggered '/usr/share/librewolf'
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
